{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nasser\\\\Desktop\\\\CURSOS WEB\\\\pagina futbol\\\\app-futbol\\\\src\\\\components\\\\Jugadores.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./estilos/Jugadores.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Jugadores = ({\n  jugadores,\n  agregarTitular,\n  agregarSuplente\n}) => {\n  _s();\n\n  const gridJugadores = createRef();\n  useEffect(() => {\n    setScrollContainer();\n    document.addEventListener('click', setScrollContainer);\n  }, []); // Funci칩n que fija el tama침o del grid de los jugadores\n\n  const setScrollContainer = (desktop = true) => {\n    let container = gridJugadores.current;\n\n    if (container) {\n      const generatedGrid = () => {\n        let items = container.getElementsByClassName('jugador');\n        let itemsLength = items.length;\n        let bp = window.matchMedia(\"(min-width: 640px)\").matches ? window.matchMedia(\"(min-width: 1024px)\").matches ? 4 : 2 : 1;\n\n        const getWidth = () => {\n          let n = bp + (itemsLength > bp ? 0.3 : 0);\n          return itemsLength / n * 100;\n        };\n\n        return `\n                  display: grid;\n                  grid-template-columns: repeat(${itemsLength}, 225px);\n                  grid-gap: 1rem;\n                  width : ${getWidth()}%;\n                `;\n      };\n\n      let styles = !desktop && window.matchMedia(\"(min-width: 1024px)\").matches ? `display: grid; grid-row-gap: 1rem;` : generatedGrid();\n      container.setAttribute('style', styles);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Jugadores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contenedor-jugadores\",\n      children: jugadores.map(j => /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"jugador\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", j.nombre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => agregarTitular(j),\n            children: \" Titular\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => agregarSuplente(j),\n            children: \" Suplente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, j.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Jugadores, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Jugadores;\n\nconst mapStateToProps = state => ({\n  jugadores: state.jugadores\n});\n\nconst MapDispatchToProps = dispatch => ({\n  agregarTitular(jugador) {\n    dispatch({\n      type: \"AGREGAR_TITULAR\",\n      jugador\n    });\n  },\n\n  agregarSuplente(jugador) {\n    dispatch({\n      type: \"AGREGAR_SUPLENTE\",\n      jugador\n    });\n  }\n\n});\n\n_c2 = MapDispatchToProps;\nexport default connect(mapStateToProps, MapDispatchToProps)(Jugadores);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Jugadores\");\n$RefreshReg$(_c2, \"MapDispatchToProps\");","map":{"version":3,"sources":["C:/Users/Nasser/Desktop/CURSOS WEB/pagina futbol/app-futbol/src/components/Jugadores.jsx"],"names":["React","connect","Jugadores","jugadores","agregarTitular","agregarSuplente","gridJugadores","createRef","useEffect","setScrollContainer","document","addEventListener","desktop","container","current","generatedGrid","items","getElementsByClassName","itemsLength","length","bp","window","matchMedia","matches","getWidth","n","styles","setAttribute","map","j","nombre","id","mapStateToProps","state","MapDispatchToProps","dispatch","jugador","type"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport {connect} from \"react-redux\";\r\nimport \"./estilos/Jugadores.css\"\r\nconst Jugadores = ({jugadores, agregarTitular, agregarSuplente}) => \r\n{\r\n  \r\n    const gridJugadores = createRef()\r\n  \r\n    useEffect(() => {\r\n      setScrollContainer()\r\n      document.addEventListener('click', setScrollContainer)\r\n    }, []) \r\n    \r\n    // Funci칩n que fija el tama침o del grid de los jugadores\r\n    const setScrollContainer = (desktop = true) => {\r\n      let container = gridJugadores.current\r\n      if (container) {\r\n        const generatedGrid = () => {\r\n          let items = container.getElementsByClassName('jugador')\r\n          let itemsLength = items.length\r\n          let bp = window.matchMedia(\"(min-width: 640px)\").matches ? window.matchMedia(\"(min-width: 1024px)\").matches ? 4 : 2 : 1\r\n  \r\n          const getWidth = () => {\r\n            let n = bp + (itemsLength > bp ? 0.3 : 0)\r\n            return (itemsLength / n) * 100\r\n          }\r\n          return `\r\n                  display: grid;\r\n                  grid-template-columns: repeat(${itemsLength}, 225px);\r\n                  grid-gap: 1rem;\r\n                  width : ${getWidth()}%;\r\n                `\r\n        }\r\n        let styles = !desktop && window.matchMedia(\"(min-width: 1024px)\").matches ? `display: grid; grid-row-gap: 1rem;` : generatedGrid()\r\n        container.setAttribute('style', styles)\r\n      }\r\n    }\r\n return  (\r\n    <section>\r\n        <h2>Jugadores</h2>\r\n        <div className=\"contenedor-jugadores\">\r\n            {\r\n                jugadores.map (j =>(\r\n                    <article className= \"jugador\" key ={j.id}>\r\n                        \r\n                    <h3> {j.nombre}</h3>\r\n                    <div>\r\n                        <button onClick={() => agregarTitular(j)}> Titular</button>\r\n                        <button onClick={() => agregarSuplente(j)}> Suplente</button>\r\n                    </div>\r\n                </article>\r\n                ))\r\n            }\r\n          \r\n        </div>\r\n    </section>\r\n)\r\n        }\r\nconst mapStateToProps = state => ({\r\n    jugadores : state.jugadores\r\n})\r\nconst MapDispatchToProps = dispatch => ({\r\n    agregarTitular(jugador){\r\n        dispatch({\r\n            type:\"AGREGAR_TITULAR\",\r\n            jugador,\r\n        })\r\n    },\r\n    agregarSuplente(jugador){\r\n        dispatch({\r\n            type:\"AGREGAR_SUPLENTE\",\r\n            jugador,\r\n        })\r\n    }\r\n})\r\nexport default connect(mapStateToProps, MapDispatchToProps)(Jugadores)"]},"metadata":{},"sourceType":"module"}